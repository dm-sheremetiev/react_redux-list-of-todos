{"version":3,"sources":["types/Filter.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","features/user.ts","app/store.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","actions","todo","type","payload","currentTodoReducer","state","action","filter","filterReducer","status","query","todos","todosReducer","user","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoItem","dispatch","useDispatch","useSelector","className","classNames","id","completed","title","onClick","userId","TodoList","currentQuery","currentStatus","allTodos","filterProp","todosList","all","includes","toLowerCase","active","filterList","map","TodoFilter","currentFilter","onChange","e","filterValue","filterActions","handleFilterChange","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","currentUser","useEffect","fetchedUser","userActions","todoActions","href","email","name","App","fetchTodos","todosActions","length","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7cc0c7c.chunk.js","sourcesContent":["export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","export interface Payload {\n  status: string;\n  query: string;\n}\n\ntype SetFilterAction = {\n  type: 'filter/SET';\n  payload: Payload;\n};\n\nconst setFilter = (filter: Payload): SetFilterAction => ({\n  type: 'filter/SET',\n  payload: filter,\n});\n\nexport const actions = { setFilter };\n\ntype State = Payload;\ntype Action = SetFilterAction;\n\nconst filterReducer = (\n  state: State = { status: 'all', query: '' },\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'allTodos/SET';\n  payload: Todo[];\n};\n\nconst setAllTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'allTodos/SET',\n  payload: todos,\n});\n\nexport const actions = { setAllTodos };\n\ntype State = Todo[] | [];\ntype Action = SetTodosAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'allTodos/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { User } from '../types/User';\n\ntype SetUser = {\n  type: 'user/SET';\n  payload: User;\n};\n\nconst setUser = (user: User): SetUser => ({\n  type: 'user/SET',\n  payload: user,\n});\n\ntype RemoveUser = {\n  type: 'user/REMOVE';\n};\n\nconst removeUser = (): RemoveUser => ({\n  type: 'user/REMOVE',\n});\n\nexport const actions = { setUser, removeUser };\n\ntype State = User | null;\ntype Action = SetUser | RemoveUser;\n\nexport const userReducer = (\n  state: State = null,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'user/SET':\n      return action.payload;\n\n    case 'user/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\nimport { userReducer } from '../features/user';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n  user: userReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Todo } from '../../types/Todo';\nimport { RootState } from '../../app/store';\nimport { actions } from '../../features/currentTodo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n}) => {\n  const dispatch = useDispatch();\n  const currentTodo: Todo | null = useSelector<RootState, Todo | null>(\n    state => state.currentTodo,\n  );\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': currentTodo?.id === todo.id,\n      })}\n      key={todo.id}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-danger': !todo.completed,\n            'has-text-success': todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            dispatch(actions.setTodo(todo));\n          }}\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames('far fa-eye', {\n                'fa-eye-slash': currentTodo?.userId === todo.userId,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../app/store';\nimport { Filter } from '../../types/Filter';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList: React.FC = () => {\n  const currentQuery: string = useSelector<RootState, string>(state => (\n    state.filter.query\n  ));\n  const currentStatus: string = useSelector<RootState, string>(state => (\n    state.filter.status\n  ));\n  const allTodos: Todo[] | [] = useSelector<RootState, Todo[] | []>(state => (\n    state.todos\n  ));\n\n  const filterList = (filterProp: string, todosList: Todo[]) => {\n    switch (filterProp) {\n      case Filter.all:\n        return todosList.filter(todo => (todo.completed || !todo.completed)\n          && todo.title.includes(currentQuery.toLowerCase()));\n\n      case Filter.completed:\n        return todosList.filter(todo => todo.completed\n          && todo.title.includes(currentQuery.toLowerCase()));\n\n      case Filter.active:\n        return todosList.filter(todo => !todo.completed\n          && todo.title.includes(currentQuery.toLowerCase()));\n\n      default:\n        return todosList;\n    }\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filterList(currentStatus, allTodos).map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/store';\nimport { actions as filterActions, Payload } from '../../features/filter';\n\nimport { Filter } from '../../types/Filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentFilter: Payload = useSelector<RootState, Payload>(\n    state => state.filter,\n  );\n\n  const handleFilterChange = (filterValue: string) => {\n    switch (filterValue) {\n      case 'all':\n        dispatch(filterActions.setFilter({\n          ...currentFilter,\n          status: Filter.all,\n        }));\n        break;\n\n      case 'active':\n        dispatch(filterActions.setFilter({\n          ...currentFilter,\n          status: Filter.active,\n        }));\n        break;\n\n      case 'completed':\n        dispatch(filterActions.setFilter({\n          ...currentFilter,\n          status: Filter.completed,\n        }));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={e => handleFilterChange(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={currentFilter.query}\n          onChange={e => dispatch(filterActions.setFilter({\n            ...currentFilter,\n            query: e.target.value,\n          }))}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {currentFilter.query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(filterActions.setFilter({\n                ...currentFilter,\n                query: '',\n              }))}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from '../Loader';\n\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { RootState } from '../../app/store';\nimport { actions as todoActions } from '../../features/currentTodo';\nimport { actions as userActions } from '../../features/user';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentTodo: Todo | null = useSelector<RootState, Todo | null>(\n    state => state.currentTodo,\n  );\n  const currentUser: User | null = useSelector<RootState, User | null>(\n    state => state.user,\n  );\n\n  useEffect(() => {\n    if (currentTodo?.userId) {\n      getUser(currentTodo.userId).then(fetchedUser => (\n        dispatch(userActions.setUser(fetchedUser))\n      ));\n    }\n  }, []);\n\n  const handleCloseClick = () => {\n    dispatch(todoActions.removeTodo());\n    dispatch(userActions.removeUser());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser || !currentTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames({\n                  'has-text-danger': !currentTodo.completed,\n                  'has-text-success': currentTodo.completed,\n                })}\n              >\n                {currentTodo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\nimport { RootState } from './app/store';\nimport { actions as todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const currentTodo: Todo | null = useSelector<RootState, Todo | null>(state => state.currentTodo);\n  const allTodos: Todo[] | [] = useSelector<RootState, Todo[] | []>(state => state.todos);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getTodos().then(fetchTodos => dispatch(todosActions.setAllTodos(fetchTodos)));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {allTodos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo?.userId && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}