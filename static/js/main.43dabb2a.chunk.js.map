{"version":3,"sources":["types/Filter.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","features/user.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","actions","todo","type","payload","currentTodoReducer","state","action","status","query","filterReducer","todos","todosReducer","user","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoItem","dispatch","className","classNames","id","completed","title","onClick","userId","TodoList","currentQuery","currentStatus","todosByQuery","includes","toLowerCase","filterProp","all","active","filterList","map","TodoFilter","currentFilter","handleQueryChange","queryValue","filterActions","onChange","e","statusValue","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","catch","TodoModal","currentUser","useEffect","fetchedUser","userActions","todoActions","href","email","name","App","allTodos","useState","isLoading","setIsLoading","fetchTodos","todosActions","finally","length","Root","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,sDCoBCC,EANG,SAACC,GAAD,MAAgC,CAC9CC,KAAM,kBACNC,QAASF,IAIED,EARM,iBAAyB,CAAEE,KAAM,uBA6BrCE,EAhBY,WAGd,IAFXC,EAEU,uDAFK,KACfC,EACU,uCACV,OAAQA,EAAOJ,MACb,IAAK,kBACH,OAAOI,EAAOH,QAEhB,IAAK,qBACH,OAAO,KAET,QACE,OAAOE,I,OCjBAL,EAVK,SAACO,GAAD,MAAsC,CACtDL,KAAM,aACNC,QAASI,IAQEP,EALI,SAACQ,GAAD,MAAoC,CACnDN,KAAM,YACNC,QAASK,IAgCIC,EArBO,WAGhB,IAFJJ,EAEG,uDAFkB,CAAEE,OAAQ,MAAOC,MAAO,IAC7CF,EACG,uCACH,OAAQA,EAAOJ,MACb,IAAK,aACH,OAAO,2BACFG,GADL,IAEEE,OAAQD,EAAOH,UAGnB,IAAK,YACH,OAAO,2BACFE,GADL,IAEEG,MAAOF,EAAOH,UAElB,QACE,OAAOE,ICjCAL,EALO,SAACU,GAAD,MAAoC,CACtDR,KAAM,eACNC,QAASO,IAoBIC,EAZM,WAGR,IAFXN,EAEU,uDAFK,GACfC,EACU,uCACV,MACO,iBADCA,EAAOJ,KAEJI,EAAOH,QAEPE,GCLAL,EAbG,SAACY,GAAD,MAA0B,CACxCV,KAAM,WACNC,QAASS,IAWEZ,EAJM,iBAAmB,CACpCE,KAAM,gBCRFW,EAAcC,0BAAgB,CAClCC,YAAaX,EACbY,OAAQP,EACRC,MAAOC,EACPC,KDYyB,WAGrB,IAFJP,EAEG,uDAFY,KACfC,EACG,uCACH,OAAQA,EAAOJ,MACb,IAAK,WACH,OAAOI,EAAOH,QAEhB,IAAK,cACH,OAAO,KACT,QACE,OAAOE,MCnBAY,EAAQC,sBACnBL,EACAM,8BACEC,0BAAgBC,O,cChBPC,G,YADoCC,IACcC,M,SNJnDzB,K,UAAAA,E,gBAAAA,E,uBAAAA,M,gCOYC0B,EAA4B,SAAC,GAEnC,IADLxB,EACI,EADJA,KAEMyB,EAAWH,cACXR,EAA2BO,GAC/B,SAAAjB,GAAK,OAAIA,EAAMU,eAGjB,OACE,qBACE,UAAQ,OACRY,UAAWC,IAAW,CACpB,6BAAwC,OAAXb,QAAW,IAAXA,OAAA,EAAAA,EAAac,MAAO5B,EAAK4B,KAH1D,UAOE,oBAAIF,UAAU,eAAd,SAA8B1B,EAAK4B,KACnC,oBAAIF,UAAU,eAAd,SACG1B,EAAK6B,WACJ,sBAAMH,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWC,IAAW,CACpB,mBAAoB3B,EAAK6B,UACzB,mBAAoB7B,EAAK6B,YAH7B,SAMG7B,EAAK8B,UAIV,oBAAIJ,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVzB,KAAK,SACL8B,QAAS,WACPN,EAAS1B,EAAgBC,KAL7B,SAQE,sBAAM0B,UAAU,OAAhB,SACE,mBACEA,UAAWC,IAAW,aAAc,CAClC,gBAA2B,OAAXb,QAAW,IAAXA,OAAA,EAAAA,EAAakB,UAAWhC,EAAKgC,mBAlClDhC,EAAK4B,KCnBHK,EAAqB,WAChC,IAAMC,EAAuBb,GAAuB,SAAAjB,GAAK,OACvDA,EAAMW,OAAOR,SAET4B,EAAwBd,GAAuB,SAAAjB,GAAK,OACxDA,EAAMW,OAAOT,UAMT8B,EAJwBf,GAA4B,SAAAjB,GAAK,OAC7DA,EAAMK,SAGsBM,QAAO,SAAAf,GAAI,OACvCA,EAAK8B,MAAMO,SAASH,EAAaI,kBAmBnC,OACE,wBAAOZ,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCA/Be,SAACa,GAClB,OAAQA,GACN,KAAKzC,EAAO0C,IACV,OAAOJ,EAAarB,QAAO,SAAAf,GAAI,OAAIA,EAAK6B,YAAc7B,EAAK6B,aAE7D,KAAK/B,EAAO+B,UACV,OAAOO,EAAarB,QAAO,SAAAf,GAAI,OAAIA,EAAK6B,aAE1C,KAAK/B,EAAO2C,OACV,OAAOL,EAAarB,QAAO,SAAAf,GAAI,OAAKA,EAAK6B,aAE3C,QACE,OAAOO,GAoBNM,CAAWP,GAAeQ,KAAI,SAAA3C,GAAI,OACjC,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAK4B,aCnDTgB,EAAuB,WAClC,IAAMnB,EAAWH,cACXuB,EAA6BxB,GACjC,SAAAjB,GAAK,OAAIA,EAAMW,UAOX+B,EAAoB,SAACC,GACzBtB,EAASuB,EAAuBD,KAGlC,OACE,uBAAMrB,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRuB,SAAU,SAAAC,GAAC,OAdOC,EAcgBD,EAAEE,OAAOC,WAbnD5B,EAASuB,EAAwBG,IADR,IAACA,GAYpB,UAIE,wBAAQE,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAG3B,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRzB,KAAK,OACLyB,UAAU,QACV4B,YAAY,YACZD,MAAOR,EAActC,MACrB0C,SAAU,SAAAC,GAAC,OAAIJ,EAAkBI,EAAEE,OAAOC,UAE5C,sBAAM3B,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdmB,EAActC,OACb,sBAAMmB,UAAU,gBAAgB6B,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRvD,KAAK,SACLyB,UAAU,SACVK,QAAS,kBAAMe,EAAkB,gBCnDlCW,G,MAAmB,kBAC9B,qBAAK/B,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASgC,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAM,MAGV,ICTMC,EAAsB,WACjC,IAAM7C,EAAWH,cACXR,EAA2BO,GAC/B,SAAAjB,GAAK,OAAIA,EAAMU,eAEXyD,EAA2BlD,GAC/B,SAAAjB,GAAK,OAAIA,EAAMO,QAGjB6D,qBAAU,WDEW,IAACxC,ECDpB,OAAIlB,QAAJ,IAAIA,KAAakB,SDCGA,ECAVlB,EAAYkB,ODAiB0B,EAAG,iBAAiB1B,KCA7BiC,MAAK,SAAAQ,GAAW,OAC1ChD,EAASiD,EAAoBD,SAGhC,IAOH,OACE,sBAAK/C,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEb6C,GAAgBzD,EAGhB,sBAAKY,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYZ,EAAYc,MAIxB,wBACE3B,KAAK,SACLyB,UAAU,SACV,UAAQ,cACRK,QA1Ba,WACvBN,EAASkD,KACTlD,EAASiD,WA4BH,sBAAKhD,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGZ,EAAYgB,QAGf,oBAAGJ,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBACEA,UAAWC,IAAW,CACpB,mBAAoBb,EAAYe,UAChC,mBAAoBf,EAAYe,YAHpC,SAMGf,EAAYe,UACT,OACA,YAGL,OAED,mBAAG+C,KAAI,iBAAYL,EAAYM,OAA/B,SACGN,EAAYO,gBAzCrB,cAAC,EAAD,QCxBKC,EAAgB,WAC3B,IAAMjE,EAA2BO,GAA4B,SAAAjB,GAAK,OAAIA,EAAMU,eACtEkE,EAAwB3D,GAA4B,SAAAjB,GAAK,OAAIA,EAAMK,SACnEgB,EAAWH,cACjB,EAAkC2D,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAWA,OATAX,qBAAU,WACRW,GAAa,GFDazB,EAAY,UEGnCO,MAAK,SAAAmB,GACJ3D,EAAS4D,EAAyBD,OAEnCE,SAAQ,kBAAMH,GAAa,QAC7B,IAGD,qCACE,qBAAKzD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,QAAf,SACGwD,EACG,cAAC,EAAD,IAEA,uCACKF,EAASO,SAAWL,GACrB,cAAC,EAAD,KAGAA,IAAcF,EAASO,QACvB,2DASJ,OAAXzE,QAAW,IAAXA,OAAA,EAAAA,EAAakB,SACZ,cAAC,EAAD,QCrDFwD,EAAO,kBACX,cAAC,IAAD,CAAUxE,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKNyE,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.43dabb2a.chunk.js","sourcesContent":["export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type SetStatusAction = {\n  type: 'status/SET';\n  payload: string;\n};\n\ntype SetQueryAction = {\n  type: 'query/SET';\n  payload: string;\n};\n\nconst setStatus = (status: string): SetStatusAction => ({\n  type: 'status/SET',\n  payload: status,\n});\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'query/SET',\n  payload: query,\n});\n\nexport const actions = { setStatus, setQuery };\n\nexport type FilterState = {\n  status: string;\n  query: string;\n};\ntype Action = SetStatusAction | SetQueryAction;\n\nconst filterReducer = (\n  state: FilterState = { status: 'all', query: '' },\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'status/SET':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    case 'query/SET':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'allTodos/SET';\n  payload: Todo[];\n};\n\nconst setAllTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'allTodos/SET',\n  payload: todos,\n});\n\nexport const actions = { setAllTodos };\n\ntype State = Todo[] | [];\ntype Action = SetTodosAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'allTodos/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { User } from '../types/User';\n\ntype SetUser = {\n  type: 'user/SET';\n  payload: User;\n};\n\nconst setUser = (user: User): SetUser => ({\n  type: 'user/SET',\n  payload: user,\n});\n\ntype RemoveUser = {\n  type: 'user/REMOVE';\n};\n\nconst removeUser = (): RemoveUser => ({\n  type: 'user/REMOVE',\n});\n\nexport const actions = { setUser, removeUser };\n\ntype State = User | null;\ntype Action = SetUser | RemoveUser;\n\nexport const userReducer = (\n  state: State = null,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'user/SET':\n      return action.payload;\n\n    case 'user/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\nimport { userReducer } from '../features/user';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n  user: userReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { useDispatch } from 'react-redux';\nimport { Todo } from '../../types/Todo';\nimport { actions } from '../../features/currentTodo';\nimport { useAppSelector } from '../../app/hooks';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n}) => {\n  const dispatch = useDispatch();\n  const currentTodo: Todo | null = useAppSelector<Todo | null>(\n    state => state.currentTodo,\n  );\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': currentTodo?.id === todo.id,\n      })}\n      key={todo.id}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-danger': !todo.completed,\n            'has-text-success': todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            dispatch(actions.setTodo(todo));\n          }}\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames('far fa-eye', {\n                'fa-eye-slash': currentTodo?.userId === todo.userId,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport { Filter } from '../../types/Filter';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList: React.FC = () => {\n  const currentQuery: string = useAppSelector<string>(state => (\n    state.filter.query\n  ));\n  const currentStatus: string = useAppSelector<string>(state => (\n    state.filter.status\n  ));\n  const allTodos: Todo[] | [] = useAppSelector<Todo[] | []>(state => (\n    state.todos\n  ));\n\n  const todosByQuery = allTodos.filter(todo => (\n    todo.title.includes(currentQuery.toLowerCase())\n  ));\n\n  const filterList = (filterProp: string) => {\n    switch (filterProp) {\n      case Filter.all:\n        return todosByQuery.filter(todo => todo.completed || !todo.completed);\n\n      case Filter.completed:\n        return todosByQuery.filter(todo => todo.completed);\n\n      case Filter.active:\n        return todosByQuery.filter(todo => !todo.completed);\n\n      default:\n        return todosByQuery;\n    }\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filterList(currentStatus).map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as filterActions, FilterState } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentFilter: FilterState = useAppSelector<FilterState>(\n    state => state.filter,\n  );\n\n  const handleFilterChange = (statusValue: string) => {\n    dispatch(filterActions.setStatus(statusValue));\n  };\n\n  const handleQueryChange = (queryValue: string) => {\n    dispatch(filterActions.setQuery(queryValue));\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={e => handleFilterChange(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={currentFilter.query}\n          onChange={e => handleQueryChange(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {currentFilter.query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleQueryChange('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json())\n    .catch(() => []);\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\n\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { actions as todoActions } from '../../features/currentTodo';\nimport { actions as userActions } from '../../features/user';\nimport { useAppSelector } from '../../app/hooks';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const currentTodo: Todo | null = useAppSelector<Todo | null>(\n    state => state.currentTodo,\n  );\n  const currentUser: User | null = useAppSelector<User | null>(\n    state => state.user,\n  );\n\n  useEffect(() => {\n    if (currentTodo?.userId) {\n      getUser(currentTodo.userId).then(fetchedUser => (\n        dispatch(userActions.setUser(fetchedUser))\n      ));\n    }\n  }, []);\n\n  const handleCloseClick = () => {\n    dispatch(todoActions.removeTodo());\n    dispatch(userActions.removeUser());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser || !currentTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames({\n                  'has-text-danger': !currentTodo.completed,\n                  'has-text-success': currentTodo.completed,\n                })}\n              >\n                {currentTodo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\nimport { actions as todosActions } from './features/todos';\nimport { useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const currentTodo: Todo | null = useAppSelector<Todo | null>(state => state.currentTodo);\n  const allTodos: Todo[] | [] = useAppSelector<Todo[] | []>(state => state.todos);\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(fetchTodos => {\n        dispatch(todosActions.setAllTodos(fetchTodos));\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <>\n                    {!!allTodos.length && !isLoading && (\n                      <TodoList />\n                    )}\n\n                    {!isLoading && !allTodos.length && (\n                      'There are no todos on server or other error'\n                    )}\n                  </>\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo?.userId && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}